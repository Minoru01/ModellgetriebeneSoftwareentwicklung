/*
 * generated by Xtext 2.21.0
 */
grammar InternalZustandsdiagramm;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.ZustandsdiagrammGrammarAccess;

}
@parser::members {
	private ZustandsdiagrammGrammarAccess grammarAccess;

	public void setGrammarAccess(ZustandsdiagrammGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getUnorderedGroup()); }
		(rule__Model__UnorderedGroup)
		{ after(grammarAccess.getModelAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTargetableState
entryRuleTargetableState
:
{ before(grammarAccess.getTargetableStateRule()); }
	 ruleTargetableState
{ after(grammarAccess.getTargetableStateRule()); } 
	 EOF 
;

// Rule TargetableState
ruleTargetableState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTargetableStateAccess().getNameAssignment()); }
		(rule__TargetableState__NameAssignment)
		{ after(grammarAccess.getTargetableStateAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitialState
entryRuleInitialState
:
{ before(grammarAccess.getInitialStateRule()); }
	 ruleInitialState
{ after(grammarAccess.getInitialStateRule()); } 
	 EOF 
;

// Rule InitialState
ruleInitialState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitialStateAccess().getGroup()); }
		(rule__InitialState__Group__0)
		{ after(grammarAccess.getInitialStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFinalState
entryRuleFinalState
:
{ before(grammarAccess.getFinalStateRule()); }
	 ruleFinalState
{ after(grammarAccess.getFinalStateRule()); } 
	 EOF 
;

// Rule FinalState
ruleFinalState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFinalStateAccess().getGroup()); }
		(rule__FinalState__Group__0)
		{ after(grammarAccess.getFinalStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGenericState
entryRuleGenericState
:
{ before(grammarAccess.getGenericStateRule()); }
	 ruleGenericState
{ after(grammarAccess.getGenericStateRule()); } 
	 EOF 
;

// Rule GenericState
ruleGenericState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGenericStateAccess().getGroup()); }
		(rule__GenericState__Group__0)
		{ after(grammarAccess.getGenericStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransition
entryRuleTransition
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransitionAccess().getGroup()); }
		(rule__Transition__Group__0)
		{ after(grammarAccess.getTransitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvent
entryRuleEvent
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventAccess().getGroup()); }
		(rule__Event__Group__0)
		{ after(grammarAccess.getEventAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGuard
entryRuleGuard
:
{ before(grammarAccess.getGuardRule()); }
	 ruleGuard
{ after(grammarAccess.getGuardRule()); } 
	 EOF 
;

// Rule Guard
ruleGuard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGuardAccess().getGroup()); }
		(rule__Guard__Group__0)
		{ after(grammarAccess.getGuardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group__0__Impl
	rule__InitialState__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getInitialStateKeyword_0()); }
	'initialState'
	{ after(grammarAccess.getInitialStateAccess().getInitialStateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group__1__Impl
	rule__InitialState__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getInitialStateAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group__2__Impl
	rule__InitialState__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getNameAssignment_2()); }
	(rule__InitialState__NameAssignment_2)
	{ after(grammarAccess.getInitialStateAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group__3__Impl
	rule__InitialState__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getWithKeyword_3()); }
	'with'
	{ after(grammarAccess.getInitialStateAccess().getWithKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group__4__Impl
	rule__InitialState__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getTransitionAssignment_4()); }
	(rule__InitialState__TransitionAssignment_4)
	{ after(grammarAccess.getInitialStateAccess().getTransitionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getInitialStateAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FinalState__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FinalState__Group__0__Impl
	rule__FinalState__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FinalState__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFinalStateAccess().getFinalStateKeyword_0()); }
	'finalState'
	{ after(grammarAccess.getFinalStateAccess().getFinalStateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FinalState__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FinalState__Group__1__Impl
	rule__FinalState__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FinalState__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFinalStateAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getFinalStateAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FinalState__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FinalState__Group__2__Impl
	rule__FinalState__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FinalState__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFinalStateAccess().getNameAssignment_2()); }
	(rule__FinalState__NameAssignment_2)
	{ after(grammarAccess.getFinalStateAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FinalState__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FinalState__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FinalState__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFinalStateAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getFinalStateAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GenericState__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericState__Group__0__Impl
	rule__GenericState__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericState__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericStateAccess().getGenericStateKeyword_0()); }
	'genericState'
	{ after(grammarAccess.getGenericStateAccess().getGenericStateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericState__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericState__Group__1__Impl
	rule__GenericState__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericState__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericStateAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getGenericStateAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericState__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericState__Group__2__Impl
	rule__GenericState__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericState__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericStateAccess().getNameAssignment_2()); }
	(rule__GenericState__NameAssignment_2)
	{ after(grammarAccess.getGenericStateAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericState__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericState__Group__3__Impl
	rule__GenericState__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericState__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericStateAccess().getWithKeyword_3()); }
	'with'
	{ after(grammarAccess.getGenericStateAccess().getWithKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericState__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericState__Group__4__Impl
	rule__GenericState__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericState__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getGenericStateAccess().getTransitionsAssignment_4()); }
		(rule__GenericState__TransitionsAssignment_4)
		{ after(grammarAccess.getGenericStateAccess().getTransitionsAssignment_4()); }
	)
	(
		{ before(grammarAccess.getGenericStateAccess().getTransitionsAssignment_4()); }
		(rule__GenericState__TransitionsAssignment_4)*
		{ after(grammarAccess.getGenericStateAccess().getTransitionsAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericState__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericState__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericState__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericStateAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getGenericStateAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getEventKeyword_0()); }
	'event'
	{ after(grammarAccess.getTransitionAccess().getEventKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getTransitionAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getEventAssignment_2()); }
	(rule__Transition__EventAssignment_2)
	{ after(grammarAccess.getTransitionAccess().getEventAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__3__Impl
	rule__Transition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getToKeyword_3()); }
	'to'
	{ after(grammarAccess.getTransitionAccess().getToKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getToAssignment_4()); }
	(rule__Transition__ToAssignment_4)
	{ after(grammarAccess.getTransitionAccess().getToAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group__0__Impl
	rule__Event__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getNameAssignment_0()); }
	(rule__Event__NameAssignment_0)
	{ after(grammarAccess.getEventAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getGroup_1()); }
	(rule__Event__Group_1__0)?
	{ after(grammarAccess.getEventAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_1__0__Impl
	rule__Event__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getAndKeyword_1_0()); }
	'and'
	{ after(grammarAccess.getEventAccess().getAndKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getGuardAssignment_1_1()); }
	(rule__Event__GuardAssignment_1_1)
	{ after(grammarAccess.getEventAccess().getGuardAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Guard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Guard__Group__0__Impl
	rule__Guard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGuardAccess().getGuardKeyword_0()); }
	'guard'
	{ after(grammarAccess.getGuardAccess().getGuardKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Guard__Group__1__Impl
	rule__Guard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGuardAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getGuardAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Guard__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGuardAccess().getNameAssignment_2()); }
	(rule__Guard__NameAssignment_2)
	{ after(grammarAccess.getGuardAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getModelAccess().getUnorderedGroup());
	}
:
	rule__Model__UnorderedGroup__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getModelAccess().getUnorderedGroup())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getModelAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getInitialStateAssignment_0()); }
					(rule__Model__InitialStateAssignment_0)
					{ after(grammarAccess.getModelAccess().getInitialStateAssignment_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getFinalStateAssignment_1()); }
					(rule__Model__FinalStateAssignment_1)
					{ after(grammarAccess.getModelAccess().getFinalStateAssignment_1()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 2);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getModelAccess().getGenericStateAssignment_2()); }
						(rule__Model__GenericStateAssignment_2)
						{ after(grammarAccess.getModelAccess().getGenericStateAssignment_2()); }
					)
					(
						{ before(grammarAccess.getModelAccess().getGenericStateAssignment_2()); }
						((rule__Model__GenericStateAssignment_2)=>rule__Model__GenericStateAssignment_2)*
						{ after(grammarAccess.getModelAccess().getGenericStateAssignment_2()); }
					)
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup__Impl
	rule__Model__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup__Impl
	rule__Model__UnorderedGroup__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__InitialStateAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getInitialStateInitialStateParserRuleCall_0_0()); }
		ruleInitialState
		{ after(grammarAccess.getModelAccess().getInitialStateInitialStateParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__FinalStateAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getFinalStateFinalStateParserRuleCall_1_0()); }
		ruleFinalState
		{ after(grammarAccess.getModelAccess().getFinalStateFinalStateParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__GenericStateAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getGenericStateGenericStateParserRuleCall_2_0()); }
		ruleGenericState
		{ after(grammarAccess.getModelAccess().getGenericStateGenericStateParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetableState__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTargetableStateAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getTargetableStateAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialStateAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getInitialStateAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__TransitionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialStateAccess().getTransitionTransitionParserRuleCall_4_0()); }
		ruleTransition
		{ after(grammarAccess.getInitialStateAccess().getTransitionTransitionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FinalState__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFinalStateAccess().getNameTargetableStateParserRuleCall_2_0()); }
		ruleTargetableState
		{ after(grammarAccess.getFinalStateAccess().getNameTargetableStateParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericState__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGenericStateAccess().getNameTargetableStateParserRuleCall_2_0()); }
		ruleTargetableState
		{ after(grammarAccess.getGenericStateAccess().getNameTargetableStateParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericState__TransitionsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGenericStateAccess().getTransitionsTransitionParserRuleCall_4_0()); }
		ruleTransition
		{ after(grammarAccess.getGenericStateAccess().getTransitionsTransitionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__EventAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getEventEventParserRuleCall_2_0()); }
		ruleEvent
		{ after(grammarAccess.getTransitionAccess().getEventEventParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__ToAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getToTargetableStateCrossReference_4_0()); }
		(
			{ before(grammarAccess.getTransitionAccess().getToTargetableStateIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTransitionAccess().getToTargetableStateIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getTransitionAccess().getToTargetableStateCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__GuardAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getGuardGuardParserRuleCall_1_1_0()); }
		ruleGuard
		{ after(grammarAccess.getEventAccess().getGuardGuardParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGuardAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getGuardAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
