/*
 * generated by Xtext 2.21.0
 */
package org.xtext.example.mydsl.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import org.xtext.example.mydsl.zustandsdiagramm.Model

@ExtendWith(InjectionExtension)
@InjectWith(ZustandsdiagrammInjectorProvider)
class ZustandsdiagrammParsingTest {
	@Inject
	ParseHelper<Model> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''			
			initialState: aus with event: stromEin to gruen;		
			genericState: gruen with event: timerAblauf to gelb;
			genericState: gelb with event: timerAblauf to rot;
			genericState: rot with event: timerAblauf and guard: keineAmpelGruen to rotGelb;	
			genericState: rotGelb with event: timerAblauf to gruen;	
			finalState: aus;	
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}